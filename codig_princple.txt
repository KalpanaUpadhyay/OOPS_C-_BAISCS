1. SOLID Principles
These are object-oriented design principles that improve code readability and maintainability.
S – Single Responsibility Principle
A class should have only one reason to change.
O – Open/Closed Principle
Software entities should be open for extension, but closed for modification.
L – Liskov Substitution Principle
Subtypes must be substitutable for their base types without breaking the app.
I – Interface Segregation Principle
No client should be forced to depend on methods it does not use.
D – Dependency Inversion Principle
High-level modules should not depend on low-level modules. Use abstractions.
 
 
